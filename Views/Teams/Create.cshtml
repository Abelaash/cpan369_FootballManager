@model FootballManager.Models.Team

@{
    ViewBag.Title = "Create Team";
}

<h2>Create Team</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Team Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- Team Name -->
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "Enter team name" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- City -->
        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.City, new { @class = "form-control", placeholder = "Enter city name" })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Wins -->
        <div class="form-group">
            @Html.LabelFor(model => model.Wins, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Wins, new { @class = "form-control", type = "number", min = "0" })
                @Html.ValidationMessageFor(model => model.Wins, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Losses -->
        <div class="form-group">
            @Html.LabelFor(model => model.Losses, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Losses, new { @class = "form-control", type = "number", min = "0" })
                @Html.ValidationMessageFor(model => model.Losses, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Draws -->
        <div class="form-group">
            @Html.LabelFor(model => model.Draws, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Draws, new { @class = "form-control", type = "number", min = "0" })
                @Html.ValidationMessageFor(model => model.Draws, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Submit Button -->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create Team" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
